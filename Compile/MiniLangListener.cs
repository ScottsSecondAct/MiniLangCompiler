//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from MiniLang.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="MiniLangParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.CLSCompliant(false)]
public interface IMiniLangListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniLangParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProgram([NotNull] MiniLangParser.ProgramContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniLangParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProgram([NotNull] MiniLangParser.ProgramContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniLangParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement([NotNull] MiniLangParser.StatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniLangParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement([NotNull] MiniLangParser.StatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniLangParser.assignStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignStmt([NotNull] MiniLangParser.AssignStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniLangParser.assignStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignStmt([NotNull] MiniLangParser.AssignStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniLangParser.printStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrintStmt([NotNull] MiniLangParser.PrintStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniLangParser.printStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrintStmt([NotNull] MiniLangParser.PrintStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MiniLangParser.ifStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfStmt([NotNull] MiniLangParser.IfStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MiniLangParser.ifStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfStmt([NotNull] MiniLangParser.IfStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>MulDivExpr</c>
	/// labeled alternative in <see cref="MiniLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMulDivExpr([NotNull] MiniLangParser.MulDivExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>MulDivExpr</c>
	/// labeled alternative in <see cref="MiniLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMulDivExpr([NotNull] MiniLangParser.MulDivExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>IdExpr</c>
	/// labeled alternative in <see cref="MiniLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdExpr([NotNull] MiniLangParser.IdExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>IdExpr</c>
	/// labeled alternative in <see cref="MiniLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdExpr([NotNull] MiniLangParser.IdExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>NumberExpr</c>
	/// labeled alternative in <see cref="MiniLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumberExpr([NotNull] MiniLangParser.NumberExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>NumberExpr</c>
	/// labeled alternative in <see cref="MiniLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumberExpr([NotNull] MiniLangParser.NumberExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>CompareExpr</c>
	/// labeled alternative in <see cref="MiniLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCompareExpr([NotNull] MiniLangParser.CompareExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>CompareExpr</c>
	/// labeled alternative in <see cref="MiniLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCompareExpr([NotNull] MiniLangParser.CompareExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ParensExpr</c>
	/// labeled alternative in <see cref="MiniLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParensExpr([NotNull] MiniLangParser.ParensExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ParensExpr</c>
	/// labeled alternative in <see cref="MiniLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParensExpr([NotNull] MiniLangParser.ParensExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>AddSubExpr</c>
	/// labeled alternative in <see cref="MiniLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAddSubExpr([NotNull] MiniLangParser.AddSubExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>AddSubExpr</c>
	/// labeled alternative in <see cref="MiniLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAddSubExpr([NotNull] MiniLangParser.AddSubExprContext context);
}
